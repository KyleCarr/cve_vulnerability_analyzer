

extern crate diesel;


use crate::functions::postgres::models::*;
use diesel::prelude::*;
use diesel::pg::PgConnection;

 fn init() ->PgConnection {

        //TODO: load db connection as environment variables
        let connection = PgConnection::establish("postgres://docker:password@localhost/postgresdb").unwrap();
    return connection;
    }

    pub fn post( _name: String, _product: String, _version: String, _description: String, _resources: Vec<String>){
        let db_connection = &mut init();

        let post = create_post(db_connection, _name, _product, _version, _description,_resources);
        println!("post created with id {}", post.id);
    }

    fn create_post(conn: &mut PgConnection,  name: String, product: String, version: String, description: String, resources: Vec<String>) -> Post {
    use crate::schema::cve;


    let new_post =  NewPost {  name, product, version, description, resources};

    diesel::insert_into(cve::table)
        .values(&new_post)
        .returning(Post::as_returning())
        .get_result(conn)
        .expect("Error saving new post")

}