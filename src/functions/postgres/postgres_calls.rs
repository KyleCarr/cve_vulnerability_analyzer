

extern crate diesel;


use crate::functions::postgres::models::*;
use diesel::prelude::*;
use diesel::pg::PgConnection;

 fn init() ->PgConnection {

        //TODO: load db connection as environment variables
        let connection = PgConnection::establish("postgres://docker:password@localhost/postgresdb").unwrap();
    return connection;
    }

    pub fn post(_id: &i32, _product: &str,_version: &str,_description: &str){



        let db_connection = &mut init();
        let post = create_post(db_connection, _id, _product, _version, _description);
        println!("post created with id {}", post.id);
    }

    fn create_post(conn: &mut PgConnection, id: &i32, product: &str,version: &str,description: &str) -> Post {
    use crate::schema::cve;

    let new_post =  NewPost { id, product, version, description};

    diesel::insert_into(cve::table)
        .values(&new_post)
        .returning(Post::as_returning())
        .get_result(conn)
        .expect("Error saving new post")

}